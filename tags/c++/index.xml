<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on lxulxu's blog</title><link>https://lxulxu.github.io/tags/c++/</link><description>Recent content in C++ on lxulxu's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 05 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://lxulxu.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>C++中的push_back与emplace_back</title><link>https://lxulxu.github.io/posts/push_back_emplace_back/</link><pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate><guid>https://lxulxu.github.io/posts/push_back_emplace_back/</guid><description>&lt;p&gt;&lt;strong&gt;1. 引言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C++标准库提供了&lt;code&gt;push_back&lt;/code&gt;和&lt;code&gt;emplace_back&lt;/code&gt;两种向容器末尾添加元素的方法。本文将深入分析这两个函数的区别、使用场景，以及在实际应用中的性能考虑。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 基本概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.1 push_back
&lt;code&gt;push_back&lt;/code&gt;有两个重载版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cpp" data-lang="cpp"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style="color:#fabd2f"&gt;void&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;push_back&lt;/span&gt;(&lt;span style="color:#fe8019"&gt;const&lt;/span&gt; T&lt;span style="color:#fe8019"&gt;&amp;amp;&lt;/span&gt; value);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#fabd2f"&gt;void&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;push_back&lt;/span&gt;(T&lt;span style="color:#fe8019"&gt;&amp;amp;&amp;amp;&lt;/span&gt; value);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一个版本复制元素，第二个版本移动元素。&lt;/p&gt;
&lt;p&gt;2.2 emplace_back
&lt;code&gt;emplace_back&lt;/code&gt;是C++11引入的变参模板函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cpp" data-lang="cpp"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style="color:#fe8019"&gt;template&lt;/span&gt; &lt;span style="color:#fe8019"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#fe8019"&gt;class&lt;/span&gt;... Args&lt;span style="color:#fe8019"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#fabd2f"&gt;void&lt;/span&gt; emplace_back(Args&lt;span style="color:#fe8019"&gt;&amp;amp;&amp;amp;&lt;/span&gt;... args);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它直接在容器中构造对象，参数被完美转发给元素的构造函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 主要区别&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;构造方式&lt;/strong&gt;：&lt;code&gt;push_back&lt;/code&gt;需要预先构造的对象，&lt;code&gt;emplace_back&lt;/code&gt;在容器内构造对象。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参数传递&lt;/strong&gt;：&lt;code&gt;push_back&lt;/code&gt;接受对象，&lt;code&gt;emplace_back&lt;/code&gt;接受构造函数参数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率&lt;/strong&gt;：&lt;code&gt;emplace_back&lt;/code&gt;可能避免不必要的临时对象创建和复制/移动操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活性&lt;/strong&gt;：&lt;code&gt;emplace_back&lt;/code&gt;可直接传递构造函数参数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编译复杂度&lt;/strong&gt;：&lt;code&gt;emplace_back&lt;/code&gt;作为变参模板可能增加编译时间和内存使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;4. 使用示例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;4.1 简单类型&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cpp" data-lang="cpp"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt;std&lt;span style="color:#fe8019"&gt;::&lt;/span&gt;vector&lt;span style="color:#fe8019"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#fabd2f"&gt;int&lt;/span&gt;&lt;span style="color:#fe8019"&gt;&amp;gt;&lt;/span&gt; vec;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;vec.push_back(&lt;span style="color:#d3869b"&gt;10&lt;/span&gt;); &lt;span style="color:#928374;font-style:italic"&gt;// push_back 足够简单高效
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;4.2 复杂对象构造&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cpp" data-lang="cpp"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt;std&lt;span style="color:#fe8019"&gt;::&lt;/span&gt;vector&lt;span style="color:#fe8019"&gt;&amp;lt;&lt;/span&gt;std&lt;span style="color:#fe8019"&gt;::&lt;/span&gt;pair&lt;span style="color:#fe8019"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#fabd2f"&gt;int&lt;/span&gt;, std&lt;span style="color:#fe8019"&gt;::&lt;/span&gt;string&lt;span style="color:#fe8019"&gt;&amp;gt;&amp;gt;&lt;/span&gt; vec;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;// 使用 push_back
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;3&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;vec.push_back(std&lt;span style="color:#fe8019"&gt;::&lt;/span&gt;make_pair(&lt;span style="color:#d3869b"&gt;1&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;one&amp;#34;&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;4&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;// 使用 emplace_back
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;5&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;vec.emplace_back(&lt;span style="color:#d3869b"&gt;1&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;one&amp;#34;&lt;/span&gt;); &lt;span style="color:#928374;font-style:italic"&gt;// 更简洁，直接传递构造函数参数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;4.3 不可移动类型&lt;/p&gt;</description></item><item><title>C++安全指南</title><link>https://lxulxu.github.io/posts/cplusplus_security_guide/</link><pubDate>Sun, 28 Apr 2024 08:20:35 +0000</pubDate><guid>https://lxulxu.github.io/posts/cplusplus_security_guide/</guid><description>&lt;h2 id="编程习惯"&gt;编程习惯&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;switch中应有default&lt;/li&gt;
&lt;li&gt;不应在debug或错误信息中提供过多内容&lt;/li&gt;
&lt;li&gt;不应该在客户端代码中硬编码对称加密秘钥&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-c++" data-lang="c++"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt; &lt;span style="color:#928374;font-style:italic"&gt;// Bad
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt; g_aes_key[] &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; {...};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;3&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fabd2f"&gt;void&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;Foo&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;4&lt;/span&gt;&lt;span&gt; ....
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;5&lt;/span&gt;&lt;span&gt; AES_func(g_aes_key, input_data, output_data);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;6&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-c++" data-lang="c++"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt; &lt;span style="color:#928374;font-style:italic"&gt;// Good
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;&lt;span style="color:#fe8019"&gt;*&lt;/span&gt; g_aes_key;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;3&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fabd2f"&gt;void&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;Foo&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;4&lt;/span&gt;&lt;span&gt; ....
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;5&lt;/span&gt;&lt;span&gt; AES_encrypt(g_aes_key, input_data, output_data);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;6&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;7&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fabd2f"&gt;void&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;Init&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;8&lt;/span&gt;&lt;span&gt; g_aes_key &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; get_key_from_https(user_id, ...);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;9&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;函数不可以返回栈上的变量的地址，而应当使用堆来传递非简单类型变量，强烈建议返回 string、vector 等类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-c++" data-lang="c++"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt; &lt;span style="color:#928374;font-style:italic"&gt;// Bad
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;&lt;span style="color:#fe8019"&gt;*&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;Foo&lt;/span&gt;(&lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;&lt;span style="color:#fe8019"&gt;*&lt;/span&gt; sz, &lt;span style="color:#fabd2f"&gt;int&lt;/span&gt; len){
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;3&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt; a[&lt;span style="color:#d3869b"&gt;300&lt;/span&gt;] &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; {&lt;span style="color:#d3869b"&gt;0&lt;/span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;4&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fe8019"&gt;if&lt;/span&gt; (len &lt;span style="color:#fe8019"&gt;&amp;gt;&lt;/span&gt; &lt;span style="color:#d3869b"&gt;100&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;5&lt;/span&gt;&lt;span&gt; memcpy(a, sz, &lt;span style="color:#d3869b"&gt;100&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;6&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;7&lt;/span&gt;&lt;span&gt; a[len] &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; &lt;span style="color:#b8bb26"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;8&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fe8019"&gt;return&lt;/span&gt; a; &lt;span style="color:#928374;font-style:italic"&gt;// WRONG
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;9&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-c++" data-lang="c++"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt; &lt;span style="color:#928374;font-style:italic"&gt;// Good
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;&lt;span style="color:#fe8019"&gt;*&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;Foo&lt;/span&gt;(&lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;&lt;span style="color:#fe8019"&gt;*&lt;/span&gt; sz, &lt;span style="color:#fabd2f"&gt;int&lt;/span&gt; len) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;3&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;&lt;span style="color:#fe8019"&gt;*&lt;/span&gt; a &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; &lt;span style="color:#fe8019"&gt;new&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;[&lt;span style="color:#d3869b"&gt;300&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;4&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fe8019"&gt;if&lt;/span&gt; (len &lt;span style="color:#fe8019"&gt;&amp;gt;&lt;/span&gt; &lt;span style="color:#d3869b"&gt;100&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;5&lt;/span&gt;&lt;span&gt; memcpy(a, sz, &lt;span style="color:#d3869b"&gt;100&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;6&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;7&lt;/span&gt;&lt;span&gt; a[len] &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; &lt;span style="color:#b8bb26"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;8&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fe8019"&gt;return&lt;/span&gt; a; &lt;span style="color:#928374;font-style:italic"&gt;// OK
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;9&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;有逻辑联系的数组必须仔细检查&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-c++" data-lang="c++"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt; &lt;span style="color:#928374;font-style:italic"&gt;// Good
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#fe8019"&gt;const&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;int&lt;/span&gt; nWeekdays[] &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; {&lt;span style="color:#d3869b"&gt;1&lt;/span&gt;, &lt;span style="color:#d3869b"&gt;2&lt;/span&gt;, &lt;span style="color:#d3869b"&gt;3&lt;/span&gt;, &lt;span style="color:#d3869b"&gt;4&lt;/span&gt;, &lt;span style="color:#d3869b"&gt;5&lt;/span&gt;, &lt;span style="color:#d3869b"&gt;6&lt;/span&gt;, &lt;span style="color:#d3869b"&gt;7&lt;/span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;3&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fe8019"&gt;const&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;char&lt;/span&gt;&lt;span style="color:#fe8019"&gt;*&lt;/span&gt; sWeekdays[] &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; {&lt;span style="color:#b8bb26"&gt;&amp;#34;Mon&amp;#34;&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;Tue&amp;#34;&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;Wed&amp;#34;&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;Thu&amp;#34;&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;Fri&amp;#34;&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;Sat&amp;#34;&lt;/span&gt;, &lt;span style="color:#b8bb26"&gt;&amp;#34;Sun&amp;#34;&lt;/span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;4&lt;/span&gt;&lt;span&gt; assert(ARRAY_SIZE(nWeekdays) &lt;span style="color:#fe8019"&gt;==&lt;/span&gt; ARRAY_SIZE(sWeekdays));&lt;span style="color:#928374;font-style:italic"&gt;//确保有关联的nWeekdays和sWeekdays数据统一
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;5&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#fe8019"&gt;for&lt;/span&gt; (&lt;span style="color:#fabd2f"&gt;int&lt;/span&gt; x &lt;span style="color:#fe8019"&gt;=&lt;/span&gt; &lt;span style="color:#d3869b"&gt;0&lt;/span&gt;; x &lt;span style="color:#fe8019"&gt;&amp;lt;&lt;/span&gt; ARRAY_SIZE(sWeekdays); x&lt;span style="color:#fe8019"&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;6&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fe8019"&gt;if&lt;/span&gt; (strcmp(sWeekdays[x], input) &lt;span style="color:#fe8019"&gt;==&lt;/span&gt; &lt;span style="color:#d3869b"&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;7&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fe8019"&gt;return&lt;/span&gt; nWeekdays[x];
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;8&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;9&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在头文件、源代码、文档中列举的函数声明应当一致，不应当出现定义内容错位的情况
错误示例：
foo.h&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-c++" data-lang="c++"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;1&lt;/span&gt;&lt;span&gt; &lt;span style="color:#fabd2f"&gt;int&lt;/span&gt; &lt;span style="color:#fabd2f"&gt;CalcArea&lt;/span&gt;(&lt;span style="color:#fabd2f"&gt;int&lt;/span&gt; width, &lt;span style="color:#fabd2f"&gt;int&lt;/span&gt; height);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;foo.cc&lt;/p&gt;</description></item><item><title>《高质量C++编程指南》笔记</title><link>https://lxulxu.github.io/posts/high_quality_cpp_programming_notes/</link><pubDate>Sun, 04 Sep 2022 11:51:33 +0000</pubDate><guid>https://lxulxu.github.io/posts/high_quality_cpp_programming_notes/</guid><description>&lt;h2 id="文件结构"&gt;文件结构&lt;/h2&gt;
&lt;h3 id="头文件结构"&gt;头文件结构&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-c++" data-lang="c++"&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;//版权和版本声明
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 2&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;&lt;span style="color:#928374;font-style:italic"&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 3&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* Copyright (c) 2001,上海贝尔有限公司网络应用事业部
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 4&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* All rights reserved.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 5&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 6&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 文件名称：graphics.h
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 7&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 文件标识：见配置管理计划书
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 8&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 摘 要：简要描述本文件的内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt; 9&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;10&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 当前版本：1.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;11&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 作 者：输入作者（或修改者）名字
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;12&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 完成日期：2001年7月20日
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;13&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;14&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 取代版本：1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;15&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 原作者 ：输入原作者（或修改者）名字
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;16&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;* 完成日期：2001年5月10日
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;17&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;18&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;19&lt;/span&gt;&lt;span&gt;&lt;span style="color:#8ec07c"&gt;#ifndef GRAPHICS_H &lt;/span&gt;&lt;span style="color:#928374;font-style:italic"&gt;// 防止 graphics.h 被重复引用
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;20&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;&lt;span style="color:#8ec07c"&gt;#define GRAPHICS_H
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;21&lt;/span&gt;&lt;span&gt;&lt;span style="color:#8ec07c"&gt;#include&lt;/span&gt; &lt;span style="color:#8ec07c;font-style:italic"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;span style="color:#8ec07c"&gt; &lt;/span&gt;&lt;span style="color:#928374;font-style:italic"&gt;// 引用标准库的头文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;22&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;23&lt;/span&gt;&lt;span&gt;&lt;span style="color:#8ec07c"&gt;#include “myheader.h” &lt;/span&gt;&lt;span style="color:#928374;font-style:italic"&gt;// 引用非标准库的头文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;24&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;25&lt;/span&gt;&lt;span&gt;&lt;span style="color:#fabd2f"&gt;void&lt;/span&gt; Function1(...); &lt;span style="color:#928374;font-style:italic"&gt;// 全局函数声明
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;26&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;27&lt;/span&gt;&lt;span&gt;&lt;span style="color:#fe8019"&gt;class&lt;/span&gt; Box &lt;span style="color:#928374;font-style:italic"&gt;// 类结构声明
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;28&lt;/span&gt;&lt;span&gt;&lt;span style="color:#928374;font-style:italic"&gt;&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;29&lt;/span&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;30&lt;/span&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#756d59"&gt;31&lt;/span&gt;&lt;span&gt;&lt;span style="color:#8ec07c"&gt;#endif
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="版权和版本的声明"&gt;版权和版本的声明&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;版权信息。&lt;/li&gt;
&lt;li&gt;文件名称，标识符，摘要。&lt;/li&gt;
&lt;li&gt;当前版本号，作者/修改者，完成日期。&lt;/li&gt;
&lt;li&gt;版本历史信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="预处理块"&gt;预处理块&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为了防止头文件被重复引用，应当用 ifndef/define/endif 结构产生预处理块&lt;/p&gt;</description></item></channel></rss>